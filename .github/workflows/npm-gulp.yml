name: Build and Deploy with Gulp

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.3.0
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Create package.json if missing
        run: |
          if [ ! -f package.json ]; then
            cat << 'EOF' > package.json
            {
              "name": "capability-portfolio",
              "version": "0.0.0",
              "private": true,
              "type": "module",
              "homepage": "https://skunkworks-io.github.io/Capability-Portfolio/",
              "scripts": {
                "dev": "vite",
                "build": "tsc -b && vite build",
                "lint": "eslint .",
                "preview": "vite preview",
                "gulp": "gulp build",
                "predeploy": "npm run gulp && npm run build",
                "deploy": "gh-pages -d dist"
              },
              "dependencies": {
                "@popperjs/core": "^2.11.8",
                "bootstrap": "^5.3.3",
                "react": "^18.3.1",
                "react-dom": "^18.3.1"
              },
              "devDependencies": {
                "@eslint/js": "^9.11.1",
                "@types/react": "^18.3.11",
                "@types/react-dom": "^18.3.0",
                "@vitejs/plugin-react": "^4.3.2",
                "autoprefixer": "^10.4.20",
                "cssnano": "^7.0.6",
                "del": "^7.1.0",
                "eslint": "^9.11.1",
                "eslint-plugin-react-hooks": "^5.0.0",
                "eslint-plugin-react-refresh": "^0.4.12",
                "gh-pages": "^6.2.0",
                "globals": "^15.11.0",
                "gulp": "^4.0.2",
                "gulp-postcss": "^10.0.0",
                "gulp-sass": "^5.1.0",
                "sass": "^1.79.4",
                "typescript": "~5.6.3",
                "typescript-eslint": "^8.8.0",
                "vite": "^6.2.0"
              }
            }
            EOF
            echo "Created package.json"
          else
            echo "package.json already exists"
          fi

      - name: Sync package-lock.json
        run: |
          if [ ! -f package-lock.json ] || ! npm ci --dry-run; then
            echo "package-lock.json missing or out of sync; running npm install"
            npm install
          else
            echo "package-lock.json is in sync"
          fi

      - name: Create vite.config.ts if missing
        run: |
          if [ ! -f vite.config.ts ]; then
            cat << 'EOF' > vite.config.ts
            import { defineConfig } from 'vite';
            import react from '@vitejs/plugin-react';

            export default defineConfig({
              plugins: [react()],
              base: '/Capability-Portfolio',
              publicDir: 'public',
              build: {
                outDir: 'dist'
              }
            });
            EOF
            echo "Created vite.config.ts"
          else
            echo "vite.config.ts already exists"
          fi

      # Add more steps as needed...

      - name: Install dependencies
        run: npm ci

      - name: Run Gulp build
        run: npx gulp build

      - name: Run Vite build
        run: npm run build

      - name: Verify dist folder
        run: ls -R dist/ || echo "dist/ folder is empty"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 7

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npm run deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
